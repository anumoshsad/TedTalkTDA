(dp0
S'transcript'
p1
(lp2
(lp3
VI want to talk to you today about something
p4
aVthe open-source programming world can teach democracy,
p5
aVbut before that, a little preamble.
p6
aVLet's start here.
p7
aa(lp8
VThis is Martha Payne. Martha's a 9-year-old Scot
p9
aVwho lives in the Council of Argyll and Bute.
p10
aVA couple months ago, Payne started a food blog
p11
aVcalled NeverSeconds, and she would take her camera
p12
aVwith her every day to school to document
p13
aVher school lunches.
p14
aVCan you spot the vegetable? (Laughter)
p15
aVAnd, as sometimes happens,
p16
aVthis blog acquired first dozens of readers,
p17
aVand then hundreds of readers,
p18
aVand then thousands of readers, as people tuned in
p19
aVto watch her rate her school lunches,
p20
aVincluding on my favorite category,
p21
aV"Pieces of hair found in food." (Laughter)
p22
aVThis was a zero day. That's good.
p23
aa(lp24
VAnd then two weeks ago yesterday, she posted this.
p25
aVA post that read: "Goodbye."
p26
aVAnd she said, "I'm very sorry to tell you this, but
p27
aVmy head teacher pulled me out of class today and told me
p28
aVI'm not allowed to take pictures in the lunch room anymore.
p29
aVI really enjoyed doing this.
p30
aVThank you for reading. Goodbye."
p31
aa(lp32
VYou can guess what happened next, right? (Laughter)
p33
aVThe outrage was so swift, so voluminous, so unanimous,
p34
aVthat the Council of Argyll and Bute reversed themselves
p35
aVthe same day and said, "We would,
p36
aVwe would never censor a nine-year-old." (Laughter)
p37
aVExcept, of course, this morning. (Laughter)
p38
aVAnd this brings up the question,
p39
aVwhat made them think they could get away
p40
aVwith something like that? (Laughter)
p41
aVAnd the answer is, all of human history prior to now.
p42
aa(lp43
V(Laughter) So,
p44
aVwhat happens when a medium suddenly puts
p45
aVa lot of new ideas into circulation?
p46
aa(lp47
VNow, this isn't just a contemporaneous question.
p48
aVThis is something we've faced several times
p49
aVover the last few centuries.
p50
aVWhen the telegraph came along, it was clear
p51
aVthat it was going to globalize the news industry.
p52
aVWhat would this lead to?
p53
aVWell, obviously, it would lead to world peace.
p54
aVThe television, a medium that allowed us not just to hear
p55
aVbut see, literally see, what was going on
p56
aVelsewhere in the world, what would this lead to?
p57
aVWorld peace. (Laughter)
p58
aVThe telephone?
p59
aVYou guessed it: world peace.
p60
aVSorry for the spoiler alert, but no world peace. Not yet.
p61
aVEven the printing press, even the printing press
p62
aVwas assumed to be a tool that was going to enforce
p63
aVCatholic intellectual hegemony across Europe.
p64
aVInstead, what we got was Martin Luther's 95 Theses,
p65
aVthe Protestant Reformation, and, you know,
p66
aVthe Thirty Years' War. All right,
p67
aVso what all of these predictions of world peace got right
p68
aVis that when a lot of new ideas suddenly
p69
aVcome into circulation, it changes society.
p70
aVWhat they got exactly wrong was what happens next.
p71
aa(lp72
VThe more ideas there are in circulation,
p73
aVthe more ideas there are for any individual to disagree with.
p74
aVMore media always means more arguing.
p75
aVThat's what happens when the media's space expands.
p76
aVAnd yet, when we look back on the printing press
p77
aVin the early years, we like what happened.
p78
aVWe are a pro-printing press society.
p79
aa(lp80
VSo how do we square those two things,
p81
aVthat it leads to more arguing, but we think it was good?
p82
aa(lp83
VAnd the answer, I think, can be found in things like this.
p84
aVThis is the cover of "Philosophical Transactions,"
p85
aVthe first scientific journal ever published in English
p86
aVin the middle of the 1600s,
p87
aVand it was created by a group of people who had been
p88
aVcalling themselves "The Invisible College,"
p89
aVa group of natural philosophers who only later
p90
aVwould call themselves scientists,
p91
aVand they wanted to improve the way
p92
aVnatural philosophers argued with each other,
p93
aVand they needed to do two things for this.
p94
aVThey needed openness. They needed to create a norm
p95
aVwhich said, when you do an experiment,
p96
aVyou have to publish not just your claims,
p97
aVbut how you did the experiment.
p98
aVIf you don't tell us how you did it, we won't trust you.
p99
aVBut the other thing they needed was speed.
p100
aVThey had to quickly synchronize what
p101
aVother natural philosophers knew. Otherwise,
p102
aVyou couldn't get the right kind of argument going.
p103
aVThe printing press was clearly the right medium for this,
p104
aVbut the book was the wrong tool. It was too slow.
p105
aVAnd so they invented the scientific journal
p106
aVas a way of synchronizing the argument
p107
aVacross the community of natural scientists.
p108
aVThe scientific revolution wasn't created by the printing press.
p109
aVIt was created by scientists,
p110
aVbut it couldn't have been created if they didn't have
p111
aVa printing press as a tool.
p112
aa(lp113
VSo what about us? What about our generation,
p114
aVand our media revolution, the Internet?
p115
aVWell, predictions of world peace? Check. (Laughter)
p116
aVMore arguing? Gold star on that one. (Laughter)
p117
aV(Laughter)
p118
aVI mean, YouTube is just a gold mine. (Laughter)
p119
aVBetter arguing? That's the question.
p120
aa(lp121
VSo I study social media, which means,
p122
aVto a first approximation, I watch people argue.
p123
aVAnd if I had to pick a group that I think is
p124
aVour Invisible College, is our generation's collection of people
p125
aVtrying to take these tools and to press it into service,
p126
aVnot for more arguments, but for better arguments,
p127
aVI'd pick the open-source programmers.
p128
aVProgramming is a three-way relationship
p129
aVbetween a programmer, some source code,
p130
aVand the computer it's meant to run on, but computers
p131
aVare such famously inflexible interpreters of instructions
p132
aVthat it's extraordinarily difficult to write out a set
p133
aVof instructions that the computer knows how to execute,
p134
aVand that's if one person is writing it.
p135
aVOnce you get more than one person writing it,
p136
aVit's very easy for any two programmers to overwrite
p137
aVeach other's work if they're working on the same file,
p138
aVor to send incompatible instructions
p139
aVthat simply causes the computer to choke,
p140
aVand this problem grows larger
p141
aVthe more programmers are involved.
p142
aVTo a first approximation, the problem of managing
p143
aVa large software project is the problem
p144
aVof keeping this social chaos at bay.
p145
aa(lp146
VNow, for decades there has been a canonical solution
p147
aVto this problem, which is to use something called
p148
aVa "version control system,"
p149
aVand a version control system does what is says on the tin.
p150
aVIt provides a canonical copy of the software
p151
aVon a server somewhere.
p152
aVThe only programmers who can change it are people
p153
aVwho've specifically been given permission to access it,
p154
aVand they're only allowed to access the sub-section of it
p155
aVthat they have permission to change.
p156
aVAnd when people draw diagrams of version control systems,
p157
aVthe diagrams always look something like this.
p158
aVAll right. They look like org charts.
p159
aVAnd you don't have to squint very hard
p160
aVto see the political ramifications of a system like this.
p161
aVThis is feudalism: one owner, many workers.
p162
aa(lp163
VNow, that's fine for the commercial software industry.
p164
aVIt really is Microsoft's Office. It's Adobe's Photoshop.
p165
aVThe corporation owns the software.
p166
aVThe programmers come and go.
p167
aa(lp168
VBut there was one programmer who decided
p169
aVthat this wasn't the way to work.
p170
aVThis is Linus Torvalds.
p171
aVTorvalds is the most famous open-source programmer,
p172
aVcreated Linux, obviously, and Torvalds looked at the way
p173
aVthe open-source movement had been dealing with this problem.
p174
aVOpen-source software, the core promise of the open-source license,
p175
aVis that everybody should have access to all the source code
p176
aVall the time, but of course, this creates
p177
aVthe very threat of chaos you have to forestall
p178
aVin order to get anything working.
p179
aVSo most open-source projects just held their noses
p180
aVand adopted the feudal management systems.
p181
aa(lp182
VBut Torvalds said, "No, I'm not going to do that."
p183
aVHis point of view on this was very clear.
p184
aVWhen you adopt a tool, you also adopt
p185
aVthe management philosophy embedded in that tool,
p186
aVand he wasn't going to adopt anything that didn't work
p187
aVthe way the Linux community worked.
p188
aVAnd to give you a sense of how enormous
p189
aVa decision like this was, this is a map
p190
aVof the internal dependencies within Linux,
p191
aVwithin the Linux operating system, which sub-parts
p192
aVof the program rely on which other sub-parts to get going.
p193
aVThis is a tremendously complicated process.
p194
aVThis is a tremendously complicated program,
p195
aVand yet, for years, Torvalds ran this
p196
aVnot with automated tools but out of his email box.
p197
aVPeople would literally mail him changes
p198
aVthat they'd agreed on, and he would merge them by hand.
p199
aa(lp200
VAnd then, 15 years after looking at Linux and figuring out
p201
aVhow the community worked, he said, "I think I know
p202
aVhow to write a version control system for free people."
p203
aa(lp204
VAnd he called it "Git." Git is distributed version control.
p205
aVIt has two big differences
p206
aVwith traditional version control systems.
p207
aVThe first is that it lives up to the philosophical promise
p208
aVof open-source. Everybody who works on a project
p209
aVhas access to all of the source code all of the time.
p210
aVAnd when people draw diagrams of Git workflow,
p211
aVthey use drawings that look like this.
p212
aVAnd you don't have to understand what the circles
p213
aVand boxes and arrows mean to see that this is a far more
p214
aVcomplicated way of working than is supported
p215
aVby ordinary version control systems.
p216
aa(lp217
VBut this is also the thing that brings the chaos back,
p218
aVand this is Git's second big innovation.
p219
aVThis is a screenshot from GitHub, the premier Git hosting service,
p220
aVand every time a programmer uses Git
p221
aVto make any important change at all,
p222
aVcreating a new file, modifying an existing one,
p223
aVmerging two files, Git creates this kind of signature.
p224
aVThis long string of numbers and letters here
p225
aVis a unique identifier tied to every single change,
p226
aVbut without any central coordination.
p227
aVEvery Git system generates this number the same way,
p228
aVwhich means this is a signature tied directly
p229
aVand unforgeably to a particular change.
p230
aa(lp231
VThis has the following effect:
p232
aVA programmer in Edinburgh and a programmer in Entebbe
p233
aVcan both get the same \u2014 a copy of the same piece of software.
p234
aVEach of them can make changes and they can merge them
p235
aVafter the fact even if they didn't know
p236
aVof each other's existence beforehand.
p237
aVThis is cooperation without coordination.
p238
aVThis is the big change.
p239
aa(lp240
VNow, I tell you all of this not to convince you that it's great
p241
aVthat open-source programmers now have a tool
p242
aVthat supports their philosophical way of working,
p243
aValthough I think that is great.
p244
aVI tell you all of this because of what I think it means
p245
aVfor the way communities come together.
p246
aa(lp247
VOnce Git allowed for cooperation without coordination,
p248
aVyou start to see communities form
p249
aVthat are enormously large and complex.
p250
aa(lp251
VThis is a graph of the Ruby community.
p252
aVIt's an open-source programming language,
p253
aVand all of the interconnections between the people \u2014
p254
aVthis is now not a software graph, but a people graph,
p255
aVall of the interconnections among the people
p256
aVworking on that project \u2014
p257
aVand this doesn't look like an org chart.
p258
aVThis looks like a dis-org chart, and yet,
p259
aVout of this community, but using these tools,
p260
aVthey can now create something together.
p261
aVSo there are two good reasons to think that
p262
aVthis kind of technique can be applied
p263
aVto democracies in general and in particular to the law.
p264
aa(lp265
VWhen you make the claim, in fact,
p266
aVthat something on the Internet is going to be good
p267
aVfor democracy, you often get this reaction.
p268
aa(lp269
V(Music) (Laughter)
p270
aa(lp271
VWhich is, are you talking about the thing
p272
aVwith the singing cats? Like, is that the thing
p273
aVyou think is going to be good for society?
p274
aVTo which I have to say, here's the thing
p275
aVwith the singing cats. That always happens.
p276
aVAnd I don't just mean that always happens with the Internet,
p277
aVI mean that always happens with media, full stop.
p278
aVIt did not take long after the rise
p279
aVof the commercial printing press before someone
p280
aVfigured out that erotic novels were a good idea. (Laughter)
p281
aVYou don't have to have an economic incentive to sell books
p282
aVvery long before someone says, "Hey, you know what I bet
p283
aVpeople would pay for?" (Laughter)
p284
aVIt took people another 150 years to even think
p285
aVof the scientific journal, right? So \u2014 (Laughter) (Applause)
p286
aa(lp287
VSo the harnessing by the Invisible College
p288
aVof the printing press to create the scientific journal
p289
aVwas phenomenally important, but it didn't happen big,
p290
aVand it didn't happen quick, and it didn't happen fast, so
p291
aVif you're going to look for where the change is happening,
p292
aVyou have to look on the margins.
p293
aa(lp294
VSo, the law is also dependency-related.
p295
aVThis is a graph of the U.S. Tax Code,
p296
aVand the dependencies of one law on other laws
p297
aVfor the overall effect.
p298
aVSo there's that as a site for source code management.
p299
aVBut there's also the fact that law is another place
p300
aVwhere there are many opinions in circulation,
p301
aVbut they need to be resolved to one canonical copy,
p302
aVand when you go onto GitHub, and you look around,
p303
aVthere are millions and millions of projects,
p304
aValmost all of which are source code,
p305
aVbut if you look around the edges, you can see people
p306
aVexperimenting with the political ramifications
p307
aVof a system like that.
p308
aVSomeone put up all the Wikileaked cables
p309
aVfrom the State Department, along with software used
p310
aVto interpret them, including my favorite use ever
p311
aVof the Cablegate cables, which is a tool for detecting
p312
aVnaturally occurring haiku in State Department prose.
p313
aV(Laughter)
p314
aVRight. (Laughter)
p315
aVThe New York Senate has put up something called
p316
aVOpen Legislation, also hosting it on GitHub,
p317
aVagain for all of the reasons of updating and fluidity.
p318
aVYou can go and pick your Senator and then you can see
p319
aVa list of bills they have sponsored.
p320
aVSomeone going by Divegeek has put up the Utah code,
p321
aVthe laws of the state of Utah, and they've put it up there
p322
aVnot just to distribute the code,
p323
aVbut with the very interesting possibility that this could
p324
aVbe used to further the development of legislation.
p325
aVSomebody put up a tool during the copyright debate
p326
aVlast year in the Senate, saying, "It's strange that Hollywood
p327
aVhas more access to Canadian legislators
p328
aVthan Canadian citizens do. Why don't we use GitHub
p329
aVto show them what a citizen-developed bill might look like?"
p330
aVAnd it includes this very evocative screenshot.
p331
aa(lp332
VThis is a called a "diff," this thing on the right here.
p333
aVThis shows you, for text that many people are editing,
p334
aVwhen a change was made, who made it,
p335
aVand what the change is.
p336
aVThe stuff in red is the stuff that got deleted.
p337
aVThe stuff in green is the stuff that got added.
p338
aVProgrammers take this capability for granted.
p339
aVNo democracy anywhere in the world offers this feature
p340
aVto its citizens for either legislation or for budgets,
p341
aVeven though those are the things done
p342
aVwith our consent and with our money.
p343
aa(lp344
VNow, I would love to tell you that the fact
p345
aVthat the open-source programmers have worked out
p346
aVa collaborative method that is large scale, distributed,
p347
aVcheap, and in sync with the ideals of democracy, I would love
p348
aVto tell you that because those tools are in place,
p349
aVthe innovation is inevitable. But it's not.
p350
aVPart of the problem, of course, is just a lack of information.
p351
aVSomebody put a question up on Quora saying,
p352
aV"Why is it that lawmakers don't use
p353
aVdistributed version control?"
p354
aVThis, graphically, was the answer. (Laughter)
p355
aV(Laughter) (Applause)
p356
aVAnd that is indeed part of the problem, but only part.
p357
aa(lp358
VThe bigger problem, of course, is power.
p359
aVThe people experimenting with participation don't have
p360
aVlegislative power, and the people who have legislative
p361
aVpower are not experimenting with participation.
p362
aVThey are experimenting with openness.
p363
aVThere's no democracy worth the name that doesn't have
p364
aVa transparency move, but transparency is openness
p365
aVin only one direction, and being given a dashboard
p366
aVwithout a steering wheel has never been the core promise
p367
aVa democracy makes to its citizens.
p368
aa(lp369
VSo consider this.
p370
aVThe thing that got Martha Payne's opinions
p371
aVout into the public was a piece of technology,
p372
aVbut the thing that kept them there was political will.
p373
aVIt was the expectation of the citizens
p374
aVthat she would not be censored.
p375
aVThat's now the state we're in with these collaboration tools.
p376
aVWe have them. We've seen them. They work.
p377
aVCan we use them?
p378
aVCan we apply the techniques that worked here to this?
p379
aa(lp380
VT.S. Eliot once said, "One of the most momentous things
p381
aVthat can happen to a culture
p382
aVis that they acquire a new form of prose."
p383
aVI think that's wrong, but \u2014 (Laughter)
p384
aVI think it's right for argumentation. Right?
p385
aVA momentous thing that can happen to a culture
p386
aVis they can acquire a new style of arguing:
p387
aVtrial by jury, voting, peer review, now this. Right?
p388
aa(lp389
VA new form of arguing has been invented in our lifetimes,
p390
aVin the last decade, in fact.
p391
aVIt's large, it's distributed, it's low-cost,
p392
aVand it's compatible with the ideals of democracy.
p393
aVThe question for us now is, are we going to let
p394
aVthe programmers keep it to themselves?
p395
aVOr are we going to try and take it and press it into service
p396
aVfor society at large?
p397
aa(lp398
VThank you for listening. (Applause)
p399
aV(Applause)
p400
aVThank you. Thank you. (Applause)
p401
aasS'id'
p402
I1546
sS'title'
p403
VHow the Internet will (one day) transform government
p404
s.